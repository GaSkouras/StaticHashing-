#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>

#include "lib/BF.h"

#define ID "id"
#define NAME "name"
#define SURNAME "surname"
#define ADDRESS "address"

#define HT_OK 0
#define HT_ERROR -1

#define CHAR 'c'
#define INT 'i'

#pragma pack(1)
typedef struct {
    int id;
    char name[15];
    char surname[20];
    char address[40];
} Record;

typedef struct {
    int fileDesc;
    char attrType;
    int attrLength;
    long int numBuckets;
    char *attrName;
} HT_info;

void HT_PrintIndex(char *fileName);

/*Η συνάρτηση HT_CreateIndex χρησιμοποιείται για τη δημιουργία και κατάλληλη αρχικοποίηση ενός
άδειου αρχείου κατακερματισμού με όνομα fileName. Σε περίπτωση που εκτελεστεί επιτυχώς,
επιστρέφεται 0, ενώ σε διαφορετική περίπτωση -1. */
int HT_CreateIndex(char *fileName, char attrType, char *attrName, int attrLenght, int buckets);


/*Η συνάρτηση HT_OpenIndex ανοίγει το αρχεί ο με όνομα filename και διαβάζει από το πρώ το μπλοκ την
πληροφορία που αφορά το αρχείο κατακερματισμού.Κατόπιν,ενημερώνετε μια δομή όπου κρατάτε όσες
πληροφορίες κρίνετε αναγκαίες για το αρχείο αυτό προκειμένου να μπορείτε να επεξεργαστείτε στη
συνέχεια τις εγγραφές του */
HT_info *HT_OpenIndex(char *fileName);

/*Η συνάρτηση HT_CloseIndex κλείνει το αρχείο που προσδιορίζεται μέσα στη δομή header_info.
Σε περίπτωση που εκτελεστεί επιτυχώς, επιστρέφεται 0, ενώ σε διαφορετική περίπτωση -1.
Η συνάρτηση είναι υπεύθυνη και για την αποδέσμευση της μνήμης που καταλαμβάνει η δομή που
περάστηκε ως παράμετρος, στην περίπτωση που το κλείσιμο πραγματοποιήθηκε επιτυχώς*/
int HT_CloseIndex(HT_info *header_info);

/* Η συνάρτηση HT_InsertEntry χρησιμοποιείται για την εισαγωγή μίας εγγραφής στο αρχείο
κατακερματισμού. Οι πληροφορίες που αφορούν το αρχείο βρίσκονται στη δομή header_info,
ενώ η εγγραφή προς εισαγωγή προσδιορίζεται από τη δομή record. Σε περίπτωση που εκτελεστεί
επιτυχώς, επιστρέφεται 0, ενώ σε διαφορετική περίπτωση -1
*/
int HT_InsertEntry(HT_info *header_info, Record record);

/*Η συνάρτηση HT_DeleteEntry χρησιμοποιείται για την διαγραφή μίας εγγραφής στο αρχείο
κατακερματισμού. Οι πληροφορίες που αφορούν το αρχείο βρίσκονται στη δομή header_info,
ενώ η εγγραφή προς διαγραφή προσδιορίζεται από τη μεταβλητή value η οποία είναι η τιμή
του πρωτεύοντος κλειδιού προς διαγραφή. Σε περίπτωση που εκτελεστεί επιτυχώς, επιστρέφεται 0,
ενώ σε διαφορετική περίπτωση -1.*/
int HT_DeleteEntry(HT_info header_info, void *value);

/*Η συνάρτηση αυτή χρησιμοποιείται για την εκτύπωση όλων των εγγραφών που υπάρχουν στο αρχείο
κατακερματισμού οι οποίες έχουν τιμή στο πεδίο-κλειδί ίση με value. Η πρώτη δομή δίνει
πληροφορία για το αρχείο κατακερματισμού, όπως αυτή είχε επιστραφεί από την HT_OpenIndex.
Για κάθε εγγραφή που υπάρχει στο αρχείο και έχει τιμή στο πεδίο-κλειδί
(όπως αυτό ορίζεται στηνHT_info) ίση με value, εκτυπώνονται τα περιεχόμενά της
(συμπεριλαμβανομένου και του πεδίου-κλειδιού). Να επιστρέφεται επίσης το πλήθος των blocks
που διαβάστηκαν μέχρι να βρεθούν όλες οι εγγραφές. Σε περίπτωση επιτυχίας επιστρέφει το
πλήθος των εγγραφών που τυπώθηκαν, ενώ σε περίπτωση λάθους επιστρέφει -1
*/
int HT_GetAllEntries(HT_info header_info, void *value);
